import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import { Client } from "@notionhq/client";
import getConfig from "next/config";
import { postApis } from "../core/apis/posts";
import type { GetStaticPaths, GetStaticProps } from "next";
import type {
  PageObjectResponse,
  RichTextItemResponse,
} from "@notionhq/client/build/src/api-endpoints";
import type { Response } from "../interfaces";
import "react-notion-x/src/styles.css";
import type { ExtendedRecordMap } from "notion-types";
import { NotionRenderer } from "react-notion-x";
interface IPostProps {
  className?: string;
  id?: string;
  data: Response<{
    notionPage?: ExtendedRecordMap;
    post: PageObjectResponse;
  }>;
}
export const getStaticProps: GetStaticProps = async (context) => {
  try {
    const res = await fetch("http://localhost:3001/api/post");
    const data = await res.json();

    return {
      props: {
        data,
      },
      revalidate: 3600,
    };
  } catch (e) {
    console.log(e);
    return {
      props: {
        data: null,
      },
      revalidate: 3600,
    };
  }
};
const Home = ({ data }: any) => {
  // console.log(data);
  // const title = data.data.post.properties.title as {
  //   type: "title";
  //   title: Array<RichTextItemResponse>;
  //   id: string;
  // };
  // const title1 = data.data.post.properties["title"].title[0].plain_text;
  // console.log(title);
  // console.log(title1);
  // console.log(data.data.notionPage);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {/* <div className="post-content-wrap">
        <NotionRenderer recordMap={data.data.notionPage} fullPage={true} />
      </div> */}
    </>
  );
};

export default Home;
